# sonar.organization=cjmanaguelod1895
# #Configure here general information about the environment, such as SonarQube server connection details for example
# #No information about specific project should appear here

#  #----- Default SonarQube server
#  #sonar.host.url=http://localhost:9000

#  #----- Default source code encoding
#  sonar.sourceEncoding=UTF-8


#  sonar.projectKey=HRIS-API
#  # --- optional properties ---

#  # defaults to project key
#  #sonar.projectName=My project
#  # defaults to 'not provided'
#  sonar.projectVersion=1.0

#  # Enable the Visual Studio bootstrapper
# sonar.visualstudio.enable=true

#  # Path is relative to the sonar-project.properties file. Defaults to .
#  sonar.sources=.

# #sonar.analysis.mode=preview
# sonar.issuesReport.html.enable=true
# sonar.report.export.path=report.json

# sonar.language=cs 

# cf.: https://github.com/SonarSource/sonar-examples/blob/master/projects/languages/csharp/sonar-project.properties
# Note: It is not recommended to use the colon ':' character in the projectKey
sonar.organization=cjmanaguelod1895
sonar.projectKey=cjmanaguelod1895:HRIS-API
sonar.projectVersion=1.2.0
sonar.projectName=MetaThrift
 
sonar.sourceEncoding=UTF-8

 
# To prevent any issues while analyzing multiple solutions containing projects with similar keys
# Will be set by default to safe starting at version 2.2: http://jira.codehaus.org/browse/SONARDOTNT-339
sonar.dotnet.key.generation.strategy=safe

# Required only when using SonarQube < 4.2
sonar.language=cs

# This property is set because it is required by the SonarQube Runner.
# But it is not taken into account because the location of the source
# code is retrieved from the .sln and .csproj files.
sonar.sources=.

# exclusions
# Properties/AssemblyInfo.cs
# WPF generated files (in obj *.g.cs, g.i.cs, ...)
# MiniMods
# Tests
# WCF generated service contracts
# nuget packages
sonar.exclusions=**/Properties/*.cs,**/*.g.cs,**/obj/**.cs,**/MiniMods/*.cs,**/Tests/**/*.cs,**/Service References/**.cs,**/packages/**.*,**/*_Should.cs

# Enable the Visual Studio bootstrapper
sonar.visualstudio.enable=true
# Exclude non-built projects from the analysis to avoid the missing assembly error with FxCop
# http://docs.sonarqube.org/display/SONAR/Analysis+Bootstrapper+for+Visual+Studio+Projects+Plugin
sonar.visualstudio.skipIfNotBuilt=true
# FxCop, cf.: 
# - http://stackoverflow.com/questions/23822527/how-to-set-fxcop-installation-path-using-sonarqubes-c-sharp-plugin
# - http://stackoverflow.com/questions/23838631/sonarqube-visual-studio-bootstrapper-cant-finding-assemblies
# sonar.cs.fxcop.fxCopCmdPath=c:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\Team Tools\\Static Analysis Tools\\FxCop\\FxCopCmd.exe

# ReSharper
sonar.resharper.solutionFile=HRIS-API.sln

# NUnit test results (since C# 3.3)
# cf.: http://stackoverflow.com/questions/27460489/how-to-include-nunit-test-results-in-sonarcube-4-5-1-c-sharp-plugin-3-3-sonar-pr
sonar.cs.nunit.reportsPaths=testresults/HRIS-API.Tests.xml

# Code Coverage
sonar.cs.opencover.reportsPaths=testresults/HRIS-API.Coverage.xml